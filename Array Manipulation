## Data Structures Array Manipulation

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'arrayManipulation' function below.
#
# The function is expected to return a LONG_INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. 2D_INTEGER_ARRAY queries
#

def arrayManipulation(n, queries):
    # Write your code here
    arr = [0] * (n + 1)  # We use n + 1 to handle the b + 1 index easily

    # Process each query
    for a, b, k in queries:
        arr[a] += k  # Add k to the start index
        if b + 1 <= n:
            arr[b + 1] -= k  # Subtract k from the index after b

    # Now calculate the maximum value using prefix sum
    max_value = 0
    current_value = 0

    for i in range(1, n + 1):
        current_value += arr[i]  # Update the current value
        if current_value > max_value:
            max_value = current_value  # Update max value if current is greater

    return max_value

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    m = int(first_multiple_input[1])

    queries = []

    for _ in range(m):
        queries.append(list(map(int, input().rstrip().split())))

    result = arrayManipulation(n, queries)

    fptr.write(str(result) + '\n')

    fptr.close()
